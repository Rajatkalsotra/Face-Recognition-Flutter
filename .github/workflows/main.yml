# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
#     - name: Fetch all history for all tags and branches
#       run: |
#         git fetch --prune --depth=10000
#     - name: Install GitVersion
#       uses: gittools/actions/gitversion/setup@v0.9.4
#       with:
#           versionSpec: '5.2.x'
#     - name: Use GitVersion
#       id: gitversion
#       uses: gittools/actions/gitversion/execute@v0.9.4
#     - name: Create version.txt with nuGetVersion
#       run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
#     - name: Upload version.txt
#       uses: actions/upload-artifact@v2
#       with:
#         name: gitversion
#         path: version.txt
  build:
    name: Build APK and Create release
    needs: [ version ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '11.x'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.5.3'
#     - name: Get version.txt
#       uses: actions/download-artifact@v2
#       with:
#         name: gitversion
#     - name: Create new file without newline char from version.txt
#       run: tr -d '\n' < version.txt > version1.txt
#     - name: Read version
#       id: version
#       uses: juliangruber/read-file-action@v1
#       with:
#         path: version1.txt
    - run: flutter pub get
#     - run: flutter test
    - run: flutter build apk --release --split-per-abi
#     - run: flutter build appbundle
    - name: Create a Release in GitHub
      uses: ncipollo/release-action@v1.8.10
      with:
        artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
        token: ${{ secrets.GH_TOKEN }}
        tag: v1.0.${{ github.run_number }}
        commit: ${{ github.sha }}
